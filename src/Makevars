### Makevars is a Makefile, most of the problems you encounter are general, and
### not specific to R or Rcpp. Search for Makefile problems first!
### Manual: https://www.gnu.org/software/make/manual/html_node/index.html#SEC_Contents
### Print any variable with: $(warning $(any_variable))
### The file is made to mimic the Makeconf calls found in $(R_HOME)/etc/x64/

### Define variables
## R and Rcpp related
RCPP_INC  = "C:/Users/Mano/Documents/R/win-library/3.4/Rcpp/include"
R_INC     = $(R_HOME)/include

## CUDA related
CUDA_HOME = "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1"
NVCC      = $(CUDA_HOME)/bin/nvcc
CUDA_INC  = $(CUDA_HOME)/include

## NVCC arguments
# -x cu: even though the files have .c extensions, should understand them as .cu
# -arch=sm_30 -gencode=arch=compute_30,code=sm_30: what type of machine code to
# generate, dependent on your graphics card
#
NVCC_ARGS = -x cu -arch=sm_30 -gencode=arch=compute_30,code=sm_30

# NVCC uses the VC compiler on windows, but PATH is usually buggy, needs explicit
# location to work, also the common includes are there
VC_HOME   = "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC"
VC_BIN    = $(VC_HOME)/bin
VC_INC    = $(VC_HOME)/include

## Extra libraries for the linker
# Linux (untested)
# PKG_LIBS  = "-L$(CUDA_HOME)/lib/x64 -Wl, -rpath, $(CUDA_HOME)/lib/x64 -lcuda -lcudart"
# Windows
PKG_LIBS  = -L$(CUDA_HOME)/lib/x64 -lcuda -lcudart
#ALL_LIBS  = -L$(CUDA_HOME)/lib/x64 -lcuda -lcudart -L$(R_HOME)/bin/x64 -lR

### Define objects
h_srcs    = $(wildcard *.h)

c_srcs  = $(wildcard *.c)
c_objs  = $(patsubst %.c, %.o, $(c_srcs))

#cu_srcs   = $(wildcard *.cc)
#cu_objs   = $(patsubst %.cc, %.o, $(cu_srcs))

all_objs  = $(c_objs) #$(cu_objs)

all: cuRious.so

# $(ALL_LIBS)
cuRious.so: $(all_objs)
	#$(NVCC) -ccbin $(VC_BIN) -shared $^ -o $@

#-I$(VC_INC)
#-Xcompiler -fPIC
%.o: %.c $(h_srcs)
	$(NVCC) -ccbin $(VC_BIN) $(NVCC_ARGS) -I$(R_INC) -I$(CUDA_INC) -c $< -o $@

#-Xcompiler -fPIC
#%.o: %.cpp $(h_srcs)
	#$(NVCC) $(CC_BIN) $(NVCC_ARGS) -I$(R_INC) -I$(CUDA_INC) -c $< -o $@
